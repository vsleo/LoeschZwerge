const v="modulepreload",y=function(a){return"/LoeschZwerge/"+a},d={},w=function(s,i,l){let m=Promise.resolve();if(i&&i.length>0){let r=function(e){return Promise.all(e.map(o=>Promise.resolve(o).then(c=>({status:"fulfilled",value:c}),c=>({status:"rejected",reason:c}))))};document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),f=t?.nonce||t?.getAttribute("nonce");m=r(i.map(e=>{if(e=y(e),e in d)return;d[e]=!0;const o=e.endsWith(".css"),c=o?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${c}`))return;const n=document.createElement("link");if(n.rel=o?"stylesheet":v,o||(n.as="script"),n.crossOrigin="",n.href=e,f&&n.setAttribute("nonce",f),document.head.appendChild(n),o)return new Promise((p,h)=>{n.addEventListener("load",p),n.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${e}`)))})}))}function u(r){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=r,window.dispatchEvent(t),!t.defaultPrevented)throw r}return m.then(r=>{for(const t of r||[])t.status==="rejected"&&u(t.reason);return s().catch(u)})},E=(a,s,i)=>{const l=a[s];return l?typeof l=="function"?l():Promise.resolve(l):new Promise((m,u)=>{(typeof queueMicrotask=="function"?queueMicrotask:setTimeout)(u.bind(null,new Error("Unknown variable dynamic import: "+s+(s.split("/").length!==i?". Note that variables only represent file names one level deep.":""))))})};export{E as _,w as a};
